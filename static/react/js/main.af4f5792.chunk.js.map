{"version":3,"sources":["Side/NavBar.js","Home.js","About.js","AppContext.js","Side/SideTab.js","Graph/Graph.js","App.js","index.js"],"names":["countries","require","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","filter","country","name","slice","NavBar","onChange","event","newValue","setState","onSuggestionsFetchRequested","suggestions","state","handleSubmit","bind","onSuggestionsClearRequested","this","props","history","push","onSubmit","getSuggestionValue","s","renderSuggestion","inputProps","placeholder","React","Component","withRouter","Home","to","component","About","AppContext","createContext","SideTab","useContext","sideIsOpen","selectedNode","closeSide","id","type","className","onClick","description","href","target","rel","Graph","fgRef","createRef","hoverNode","visited","Set","highlightLinks","context","ref","graphData","data","enableNodeDrag","nodeLabel","nodeCanvasObject","node","ctx","globalScale","fontSize","Math","max","font","val","textAlign","textBaseline","fillStyle","has","fillText","x","y","onNodeHover","document","body","style","cursor","onNodeClick","setNode","openSide","newHighlightLinks","links","forEach","link","source","add","current","centerAt","zoom","onBackgroundClick","linkWidth","cooldownTicks","onEngineStop","zoomToFit","contextType","hardData","App","exact","path","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"js/main.af4f5792.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Autosuggest from 'react-autosuggest';\nimport './NavBar.css';\n\nconst countries = require('./countries.json');\n\n// GET RID OF THIS ONCE WE HAVE WIKI AUTOSUGGEST\nconst getSuggestions = (value) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0 ? [] : countries.filter(\n    (country) => country.name.toLowerCase().slice(0, inputLength) === inputValue,\n  );\n};\n\nexport class NavBar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      suggestions: [],\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n    this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n  }\n\n  handleSubmit() {\n    this.props.history.push('/see/' + this.state.value); //eslint-disable-line\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      value: newValue,\n    });\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  onSuggestionsClearRequested() {\n    this.setState({\n      suggestions: [],\n    });\n  }\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Autosuggest\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          getSuggestionValue={(s) => s.name}\n          renderSuggestion={(s) => <div>{s.name}</div>}\n          inputProps={{\n            placeholder: 'Search',\n            value,\n            onChange: this.onChange,\n          }}\n        />\n      </form>\n    );\n  }\n}\n\nexport default withRouter(NavBar);\n","import React from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { NavBar } from './Side/NavBar';\n\nexport function Home() {\n  return (\n    <>\n      <Link to=\"/about\"><h1>wikigraph</h1></Link>\n      <Route component={NavBar} />\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport function About() {\n  return (\n    <>\n      <Link to=\"/\"><h1>wikigraph</h1></Link>\n      <p>content!!!!lorem</p>\n    </>\n  );\n}\n\nexport default About;\n","import React from 'react';\n\n// eslint complains that it \"prefers default.\" No idea what that means or why i should care\nexport const AppContext = React.createContext(); // eslint-disable-line\n","import React, { useContext } from 'react';\nimport { AppContext } from '../AppContext';\nimport './SideTab.css';\n\nexport function SideTab() {\n  const { sideIsOpen, selectedNode, closeSide } = useContext(AppContext);\n\n  if (!sideIsOpen) {\n    return null;\n  }\n  return (\n    <div id=\"SideTab\">\n      <button type=\"button\" className=\"btn close-btn\" onClick={closeSide}>&times;</button>\n      <h1 id=\"info-title\">{selectedNode.name}</h1>\n      <hr />\n      <p id=\"main-info\">{selectedNode.description}</p>\n      <p><a href={selectedNode.href} target=\"_blank\" rel=\"noreferrer\" id=\"wiki-link\">Read More</a></p>\n    </div>\n  );\n}\n\nexport default SideTab;\n","import React from 'react';\nimport ForceGraph2D from 'react-force-graph-2d';\nimport { AppContext } from '../AppContext';\n\nexport class Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fgRef = React.createRef();\n    this.state = {\n      hoverNode: '',\n      visited: new Set(),\n      highlightLinks: new Set(),\n    };\n  }\n\n  render() {\n    const { context } = this;\n\n    return (\n      <ForceGraph2D\n        ref={this.fgRef}\n        graphData={context.data}\n        enableNodeDrag={false}\n        nodeLabel=\"href\"\n        nodeCanvasObject={(node, ctx, globalScale) => {\n          const { hoverNode, visited } = this.state;\n          // this formula has to change\n          const fontSize = Math.max((node.value * 300) / globalScale, 2);\n\n          ctx.font = `${fontSize}px Times-new-roman`;\n\n          // we are eventually removing almost everything from here so disable is fine\n          node.val = fontSize; // eslint-disable-line\n\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n\n          // probably a way to optimize this control flow...\n          if (context.selectedNode && context.selectedNode.id === node.id) {\n            ctx.fillStyle = '#0000FF';\n          } else if (hoverNode === node) {\n            ctx.fillStyle = '#751F80';\n          } else if (visited.has(node.id)) {\n            ctx.fillStyle = '#751F80';\n          } else {\n            ctx.fillStyle = '#0645BD';\n          }\n\n          ctx.fillText(node.name, node.x, node.y);\n        }}\n        onNodeHover={(node) => {\n          if (node) {\n            document.body.style.cursor = 'pointer';\n            this.setState({ hoverNode: node });\n          } else {\n            document.body.style.cursor = 'default';\n            this.setState({ hoverNode: null });\n          }\n        }}\n        onNodeClick={(node) => {\n          if (node) {\n            const { visited } = this.state;\n            context.setNode(node);\n            context.openSide();\n\n            const newHighlightLinks = new Set();\n            context.data.links.forEach((link) => {\n              if (link.source.id === node.id || link.target.id === node.id) {\n                newHighlightLinks.add(link);\n              }\n            });\n\n            this.setState({ highlightLinks: newHighlightLinks });\n            this.setState({ visited: visited.add(node.id) });\n\n            // Change node.x to something to do with screen width\n            this.fgRef.current.centerAt(node.x - 40, node.y, 1000);\n            this.fgRef.current.zoom(5, 2000);\n          }\n        }}\n        onBackgroundClick={() => {\n          this.setState({ highlightLinks: new Set() });\n        }}\n        // lint wants to destructure highlightLinks on next line which is dumb\n        linkWidth={(link) => (this.state.highlightLinks.has(link) ? 5 : 1)} // eslint-disable-line\n        cooldownTicks={50}\n        onEngineStop={() => this.fgRef.current.zoomToFit(400)}\n      />\n    );\n  }\n}\n\nGraph.contextType = AppContext;\n\nexport default Graph;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Home } from './Home';\nimport { About } from './About';\nimport { SideTab } from './Side/SideTab';\nimport { NavBar } from './Side/NavBar';\nimport { Graph } from './Graph/Graph';\nimport { AppContext } from './AppContext';\nimport './App.css';\n\nconst hardData = require('./Renaissance.json'); // needs to be dynamically fetched from server\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: hardData, // eslint-disable-line\n      sideIsOpen: false,\n      selectedNode: null,\n    };\n\n    this.openSide = this.openSide.bind(this);\n    this.closeSide = this.closeSide.bind(this);\n    this.setNode = this.setNode.bind(this);\n  }\n\n  setNode(node) {\n    this.setState({ selectedNode: node });\n  }\n\n  openSide() {\n    this.setState({ sideIsOpen: true });\n  }\n\n  closeSide() {\n    this.setState({ sideIsOpen: false });\n  }\n\n  render() {\n    const { data, sideIsOpen, selectedNode } = this.state;\n    return (\n      <>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/see\">\n          <AppContext.Provider value={{\n            data,\n            sideIsOpen,\n            selectedNode,\n            openSide: this.openSide,\n            closeSide: this.closeSide,\n            setNode: this.setNode,\n          }}\n          >\n            <div className=\"row\">\n              <div className=\"col-md-4\" id=\"sidebar\">\n                <Route component={NavBar} />\n                <SideTab />\n              </div>\n              <div className=\"col-lg\" id=\"graph\">\n                <Graph />\n              </div>\n            </div>\n          </AppContext.Provider>\n        </Route>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}